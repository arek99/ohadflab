{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json3",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Json4",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				}
			],
			"script": "source(output(\n\t\ttype as string,\n\t\tid as string,\n\t\ttimestamp as string,\n\t\tlocalTimestamp as string,\n\t\tserviceUrl as string,\n\t\tchannelId as string,\n\t\tfrom as (id as string, name as string, aadObjectId as string, role as string),\n\t\tconversation as (conversationType as string, id as string, tenantId as string),\n\t\trecipient as (id as string, name as string),\n\t\ttextFormat as string,\n\t\tlocale as string,\n\t\ttext as string,\n\t\tattachments as (contentType as string, content as string)[],\n\t\tentities as (type as string, locale as string, country as string, platform as string)[],\n\t\tchannelData as (tenant as (id as string))\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tsingleDocument: true) ~> source1\nsource1 select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(type = toString(byName('type')),\n\t\tid = toString(byName('id')),\n\t\ttext = toString(byName('text'))) ~> MapDrifted1\nMapDrifted1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}