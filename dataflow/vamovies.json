{
	"name": "vamovies",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vamov",
						"type": "DatasetReference"
					},
					"name": "vamovies"
				},
				{
					"dataset": {
						"referenceName": "vamovonline",
						"type": "DatasetReference"
					},
					"name": "vamovon"
				},
				{
					"dataset": {
						"referenceName": "vamovieactors",
						"type": "DatasetReference"
					},
					"name": "vamovact"
				},
				{
					"dataset": {
						"referenceName": "vaact",
						"type": "DatasetReference"
					},
					"name": "vaactors"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "vacat",
						"type": "DatasetReference"
					},
					"name": "vacatalog"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Join3"
				},
				{
					"name": "Select3"
				}
			],
			"script": "\n\nsource(output(\n\t\tSourceSystemID as string,\n\t\tGlobalMovieID as string,\n\t\tSourceSystemMovieID as string,\n\t\tMovieTitle as string,\n\t\tCategory as string,\n\t\tRating as string,\n\t\tRunTimeMin as string,\n\t\tReleaseDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> vamovies\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> vamovon\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> vamovact\nsource(output(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> vaactors\nvamovies, vamovon join(SourceSystemMovieID == MovieID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nJoin1 select(mapColumn(\n\t\tSourceSystemID,\n\t\tGlobalMovieID,\n\t\tSourceSystemMovieID,\n\t\tOnlineMovieID,\n\t\tMovieTitle,\n\t\tCategory,\n\t\tRating,\n\t\tRunTimeMin,\n\t\tReleaseDate\n\t)) ~> Select1\nSelect1, vamovact join(SourceSystemMovieID == MovieID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join2\nJoin2 select(mapColumn(\n\t\tSourceSystemID,\n\t\tGlobalMovieID,\n\t\tSourceSystemMovieID,\n\t\tOnlineMovieID,\n\t\tActorID,\n\t\tMovieTitle,\n\t\tCategory,\n\t\tRating,\n\t\tRunTimeMin,\n\t\tReleaseDate,\n\t\tMovieActorID\n\t)) ~> Select2\nSelect2, vaactors join(Select2@ActorID == vaactors@ActorID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join3\nJoin3 select(mapColumn(\n\t\tSourceSystemID,\n\t\tGlobalMovieID,\n\t\tSourceSystemMovieID,\n\t\tOnlineMovieID,\n\t\tActorID = Select2@ActorID,\n\t\tActorName,\n\t\tGender,\n\t\tMovieTitle,\n\t\tCategory,\n\t\tRating,\n\t\tRunTimeMin,\n\t\tReleaseDate\n\t)) ~> Select3\nSelect3 sink(input(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['catalog.csv'],\n\tpartitionBy('hash', 1)) ~> vacatalog"
		}
	}
}