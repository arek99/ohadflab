{
	"name": "dataflowjson",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "JsonClim",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FlattenTest"
				}
			],
			"script": "source(output(\n\t\taddress as string,\n\t\talert as boolean,\n\t\tapplication_id as string,\n\t\tauthorization as string,\n\t\tcity as string,\n\t\tcountry as string,\n\t\tcreated_at as string,\n\t\tdata as (channels as (alias as string, description as string, id as short, name as string, status as short, valid as boolean, value as double)[], datetime as string)[],\n\t\tid as short,\n\t\tindustry as string,\n\t\tlatitude as double,\n\t\tlocations as (address as string, alert as boolean, application_id as string, authorization as string, city as string, company_id as short, country as string, created_at as string, devices as (alert as boolean, broadcast_interval as short, children_action as boolean, children_note as boolean, created_at as string, device_type_id as string, enabled as boolean, id as string, location_meta as string[], marker_alert as string, name as string, online as boolean, properties as (activation as string, codec as string, {codec.prox_unit} as string, {codec.vol_unit} as string, deveui as string, device_registry_id as string, marker_channels as short[], marker_style as string, marker_type as string, network as string, unit as boolean), sensor_type as string, sensor_use as string, sensors as (alert as boolean, cached as boolean, cayenne_id as string, channel as short, created_at as string, device_type_id as string, enabled as boolean, id as string, name as string, parent_id as string, properties as (channel as short), sensor_use as string, thing_type as short, ts as long, type as string, unit as string, v as double)[], thing_type as boolean, ts as long)[], id as short, industry as string, latitude as double, longitude as double, meta_options as string[], name as string, primary_users as string[], state as string, status as boolean, supported_device as string, timezone as string, updated_at as string, user_id as string, zip as integer)[],\n\t\tlongitude as double,\n\t\tname as string,\n\t\tprimary_users as string[],\n\t\tstate as string,\n\t\tstationId as short,\n\t\tstatus as boolean,\n\t\ttimezone as string,\n\t\tupdated_at as string,\n\t\tuser_id as string,\n\t\tzip as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tlimit: 100,\n\tinferDriftedColumnTypes: true,\n\tdocumentForm: 'singleDocument',\n\twildcardPaths:['*.json']) ~> source1\nsource1 foldDown(unroll(locations, locations),\n\tmapColumn(\n\t\tstate,\n\t\tlongitude,\n\t\ttimezone,\n\t\tstatus,\n\t\tlatitude,\n\t\tupdated_at,\n\t\tcreated_at,\n\t\tid,\n\t\talert,\n\t\tzip,\n\t\tuser_id,\n\t\tlocations,\n\t\tname,\n\t\tcity,\n\t\tindustry,\n\t\tprimary_users,\n\t\tapplication_id,\n\t\tcountry,\n\t\tauthorization,\n\t\taddress,\n\t\tstationId,\n\t\tdata\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: false) ~> FlattenTest"
		}
	}
}